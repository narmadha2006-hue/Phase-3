PYTHON:
from flask import Flask, render_template, request
import pandas as pd
from mlxtend.frequent_patterns import apriori, association_rules
import os
app = Flask(_name_)
UPLOAD_FOLDER = "uploads"
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
def preprocess_data(df):
    transactions = df['Items'].apply(lambda x: x.split(','))
    all_items = sorted({item for sublist in transactions for item in sublist})
    encoded_rows = []
    for items in transactions:
        row = {item: (item in items) for item in all_items}
        encoded_rows.append(row)
    return pd.DataFrame(encoded_rows)
@app.route('/', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        file = request.files['file']
        if file:
            df = pd.read_csv(file)
            basket_df = preprocess_data(df)
            frequent_itemsets = apriori(basket_df, min_support=0.2, use_colnames=True)
            rules = association_rules(frequent_itemsets, metric="lift", min_threshold=1.0)
            rules = rules[rules['confidence'] >= 0.5]
            rules = rules[['antecedents', 'consequents', 'support', 'confidence', 'lift']]

            # Convert sets to strings for display
            rules['antecedents'] = rules['antecedents'].apply(lambda x: ', '.join(list(x)))
            rules['consequents'] = rules['consequents'].apply(lambda x: ', '.join(list(x)))

            return render_template('results.html', tables=rules.to_dict(orient='records'))

    return render_template('index.html')

if _name_ == '_main_':
    app.run(debug=True)
